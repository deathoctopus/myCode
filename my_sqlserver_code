   连续30天没有搜索量的型号
    select *
  from (
  select partno, inputdate, rowId = ROW_NUMBER() over(partition by partno order by inputdate)
  from [test].[dbo].myTable2) as t1 inner join 
  (
  select partno, inputdate, rowId = ROW_NUMBER() over(partition by partno order by inputdate)
  from [test].[dbo].myTable2) as t2 on t1.partno =t2.partno and t1.rowId +1=t2.rowId 
  where datediff(day,t1.inputdate,t2.inputdate )>2
  
  
#30天连续为零的型号的总数排序
  select C.F_Partno, sum(C.F_count)as myCount from(
	  select A.F_Partno, B.F_count
	  from R_Temp_Over30DayNoSearch A
	  inner join T_Temp_30DayCount B
	  on A.F_Partno = B.F_partno)C
  group by C.F_partno
  order by myCount desc


#一个型号的走势
  select B.F_partno, A.F_date,  
(
	CASE  
	WHEN (B.F_count is null )
	then 0
	WHEN (B.F_count is not null )
	then B.F_count
	end
)	as myCount
from T_Temp_RecentDate A
left join 
	(
	select * from T_Temp_30DayCount
	where F_partno = 'AE'
	) B
on A.F_date = B.F_inputdate

-----------------------------------------------------------------------------------------------------------------------------

#建立分区方法
S1：建立文件组，建立一个单独的文件组即可，分区数据都指向这个文件组
文件组名为 FileGroup

S2：建立分区方法
CREATE PARTITION FUNCTION partition_function_name ( input_parameter_type )
AS RANGE [ LEFT | RIGHT ] 
FOR VALUES ( [ boundary_value [ ,...n ] ] ) 
[ ; ]
#实例
CREATE PARTITION FUNCTION partitionFunction ( date )
AS RANGE RIGHT
FOR VALUES ( '2014-01-01', '2014-02-01' ) 

S3：建立分区结构
CREATE PARTITION SCHEME partition_scheme_name
AS PARTITION partition_function_name
[ ALL ] TO ( { file_group_name | [ PRIMARY ] } [ ,...n ] )
[ ; ]
#实例
CREATE PARTITION SCHEME partitionScheme
AS PARTITION partitionFunction
ALL TO ( FileGroup )

S4：建立分区表
CREATE TABLE ParititionTable
{
	id, int
	orderId, int
	inputDate, date
}ON partitionScheme(inputDate)#分区结构名（列名）
